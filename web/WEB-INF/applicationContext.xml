<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/restarant"/>
        <property name="username" value="user"/>
        <property name="password" value="password"/>
    </bean>


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--<property name="dataSource" ref="dataSource"/>-->
        <constructor-arg type="javax.sql.DataSource" ref="dataSource"/>
    </bean>

    <bean id="userDAO" class="com.restarant.model.sql.userSql.UserDAOImpl" init-method="init">
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="dishDAO" class="com.restarant.model.sql.dishSql.DishDAOImpl" init-method="init">
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="orderDAO" class="com.restarant.model.sql.orderSql.OrderDAOImpl" init-method="init">
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
        <constructor-arg name="userDAO" ref="userDAO"/>
    </bean>

    <bean id="groupOrderDAO" class="com.restarant.model.sql.groupSql.GroupOrderDAOImpl" init-method="init">
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
        <constructor-arg name="orderDAOImpl" ref="orderDAO"/>
    </bean>

    <bean id="dishService" class="com.restarant.controller.service.DishService" init-method="init">
        <constructor-arg name="dishDAO" ref="dishDAO"/>
        <constructor-arg name="dishRepository" ref="dishRepositoryBean"/>
    </bean>

    <bean name="userService" class="com.restarant.controller.service.UserService">
        <constructor-arg name="userDAO" ref="userDAO"/>
        <constructor-arg name="userRepository" ref="userRepositoryBean"/>
    </bean>

    <bean name="orderService" class="com.restarant.controller.service.OrderService">
        <constructor-arg name="listOrders" ref="listOfOrdersBean"/>
        <constructor-arg name="orderDAO" ref="orderDAO"/>
    </bean>

    <bean name="groupOrderService" class="com.restarant.controller.service.GroupOrderService">
        <constructor-arg name="groupOrderDAO" ref="groupOrderDAO"/>
    </bean>


    <bean name="userRepositoryBean" class="com.restarant.model.repository.UserRepository"/>
    <bean name="dishRepositoryBean" class="com.restarant.model.repository.DishRepository"/>
    <bean name="listOfOrdersBean" class="com.restarant.model.repository.ListOrders">
        <constructor-arg name="dishService" ref="dishService"/>
    </bean>

    <bean id="CUserDetailsService" class="com.restarant.controller.security.CustomUserDetailsService">
        <constructor-arg name="userRepository" ref="userRepositoryBean"/>
        <constructor-arg name="userDAO" ref="userDAO"/>
    </bean>

    <security:http auto-config="true">
        <security:intercept-url pattern="/user/*" access="hasRole('USER')"/>
        <security:intercept-url pattern="/admin/*" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/admin/dish/*" access="hasRole('ADMIN')"/>
        <security:intercept-url pattern="/login" access="permitAll"/>
        <security:intercept-url pattern="/registration" access="permitAll"/>
        <security:intercept-url pattern="/successLogin" access="hasAnyRole('USER', 'ADMIN')"/>

        <security:form-login
                login-page="/login"
                login-processing-url="/check-user"
                default-target-url="/successLogin"
                authentication-failure-url="/errorLogin"
                username-parameter="name"
                password-parameter="password"/>
        <security:logout
                logout-url="/logout"
                invalidate-session="true"
                delete-cookies="JSESSIONID"
                logout-success-url="/login"/>
        <security:csrf/>

    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="CUserDetailsService"/>
    </security:authentication-manager>

</beans>